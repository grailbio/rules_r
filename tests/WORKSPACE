# Copyright 2018 The Bazel Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

workspace(name = "rules_r_tests")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# rules_r workspace.
local_repository(
    name = "rules_r",
    path = "..",
)

# Sub-workspaces for testing.
local_repository(
    name = "workspaceroot",
    path = "workspaceroot",
)

# R distribution from Nix.
http_archive(
    name = "io_tweag_rules_nixpkgs",
    sha256 = "980edfceef2e59e1122d9be6c52413bc298435f0a3d452532b8a48d7562ffd67",
    strip_prefix = "rules_nixpkgs-0.10.0",
    urls = ["https://github.com/tweag/rules_nixpkgs/releases/download/v0.10.0/rules_nixpkgs-0.10.0.tar.gz"],
)

load("@io_tweag_rules_nixpkgs//nixpkgs:repositories.bzl", "rules_nixpkgs_dependencies")

rules_nixpkgs_dependencies()

load("@io_tweag_rules_nixpkgs//nixpkgs:nixpkgs.bzl", "nixpkgs_git_repository", "nixpkgs_package")

nixpkgs_git_repository(
    name = "nixpkgs",
    revision = "23.11",
)

nixpkgs_package(
    name = "Rnix",
    attribute_path = "R",
    repository = "@nixpkgs",
)

# To actually use R from nix, change this value to True.
use_r_from_nix = False

# Initialize rules_r.
load("@rules_r//R:dependencies.bzl", "r_rules_dependencies")

r_rules_dependencies()

load("@rules_r_tests//:init.bzl", "r_register_toolchains")

rscript = r_register_toolchains(use_r_from_nix)

# Initialize R packages.
load("@rules_r//R:repositories.bzl", "r_repository_list")

r_repository_list(
    name = "r_repositories_bzl",
    build_file_overrides = "@rules_r_tests//cran:build_file_overrides.csv",
    other_args = {
        "pkg_type": "both",
    },
    package_list = "@rules_r_tests//cran:packages.csv",
    remote_repos = {
        # CRAN does not retain binary archives for macOS.
        "CRAN": "https://packagemanager.posit.co/cran/2024-01-15/",
    },
    rscript = rscript,
)

load("@r_repositories_bzl//:r_repositories.bzl", "r_repositories")

r_repositories()

load("@rules_r//R:dependencies.bzl", "r_coverage_dependencies")

r_coverage_dependencies(rscript = rscript)

load("@r_coverage_deps_bzl//:r_repositories.bzl", coverage_deps = "r_repositories")

coverage_deps()

http_archive(
    name = "com_google_protobuf",
    sha256 = "8ff511a64fc46ee792d3fe49a5a1bcad6f7dc50dfbba5a28b0e5b979c17f9871",
    strip_prefix = "protobuf-25.2",
    urls = [
        "https://github.com/protocolbuffers/protobuf/releases/download/v25.2/protobuf-25.2.tar.gz",
    ],
)

# System dependencies.
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")

protobuf_deps()

# Define custom toolchains to test if R toolchains work correctly.
# See BUILD for actual definition of the R toolchains.
http_archive(
    name = "toolchains_llvm",
    sha256 = "e91c4361f99011a54814e1afbe5c436e0d329871146a3cd58c23a2b4afb50737",
    strip_prefix = "toolchains_llvm-1.0.0",
    canonical_id = "1.0.0",
    url = "https://github.com/bazel-contrib/toolchains_llvm/releases/download/1.0.0/toolchains_llvm-1.0.0.tar.gz",
)

load("@toolchains_llvm//toolchain:deps.bzl", "bazel_toolchain_dependencies")

bazel_toolchain_dependencies()

load("@toolchains_llvm//toolchain:rules.bzl", "llvm_toolchain")

llvm_toolchain(
    name = "llvm_toolchain",
    cxx_builtin_include_directories = {
        "linux-aarch64": ["/usr/share/R/include"],
        "linux-x86_64": ["/usr/share/R/include"],
        "darwin-aarch64": ["/Library/Frameworks/R.framework/Headers"],
        "darwin-x86_64": ["/Library/Frameworks/R.framework/Headers"],
    },
    llvm_versions = {
        "": "16.0.0",
        "darwin-aarch64": "16.0.5",
        "darwin-x86_64": "15.0.7",
    },
    stdlib = {
        "linux-aarch64": "stdc++",
        "linux-x86_64": "stdc++",
    },
)

load("@llvm_toolchain//:toolchains.bzl", "llvm_register_toolchains")

llvm_register_toolchains()

# Docker related setup.
http_archive(
    name = "io_bazel_rules_docker",
    sha256 = "b1e80761a8a8243d03ebca8845e9cc1ba6c82ce7c5179ce2b295cd36f7e394bf",
    urls = [
        "https://github.com/bazelbuild/rules_docker/releases/download/v0.25.0/rules_docker-v0.25.0.tar.gz",
    ],
)

load(
    "@io_bazel_rules_docker//repositories:repositories.bzl",
    container_repositories = "repositories",
)

container_repositories()

load("@io_bazel_rules_docker//repositories:deps.bzl", container_deps = "deps")

container_deps()

load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_pull",
)

container_pull(
    name = "r_base",
    digest = "sha256:9bfa340008f25823bfbe6dd2d8aebf01672cc4f36f19e00dfcb4a4cd7fb082ae",
    registry = "ghcr.io",
    repository = "rocker-org/r-ver",
    tag = "4.3.2",
)
